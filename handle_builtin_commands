#include "main.h"

#define MAX_COMMAND_LENGTH 100

static struct builtin_command builtin_commands[] = {
	{"cd", cd},
	{"pwd", pwd},
	{"exit", exit},
};

static int num_builtin_commands = sizeof(builtin_commands) / sizeof(struct builtin_command);

static char *current_directory;

void handle_builtin_command(char *command)
{
	int i;

	for (i = 0; i < num_builtin_commands; i++)
	{
		if (strcmp(command, builtin_commands[i].name) == 0)
		{
			builtin_commands[i].function();
			return;
		}
	}
}

// Changes the current working directory.
void cd()
{
	char *new_directory;

	printf("Enter the new directory: ");
	new_directory = get_input();
	chdir(new_directory);
}

// Prints the current working directory.
void pwd()
{
	printf("%s\n", current_directory);
}

// Exits the shell.
void exit()
{
	exit(0);
}

// Gets an input from the user.
char *get_input()
{
	char *input;
	size_t input_length;

	input = malloc(MAX_COMMAND_LENGTH * sizeof(char));
	input_length = getline(&input, &MAX_COMMAND_LENGTH, stdin);
	input[input_length - 1] = '\0';

	return input;
}

// The main function.
int main()
{
	char *command;

	current_directory = getcwd(NULL, 0);

	while (1)
	{
		printf("$ ");
		command = get_input();

		// Handle built-in commands.
		handle_builtin_command(command);

		// Otherwise, execute the command as a shell command.
		// else
		{
			system(command);
		}
	}

	return 0;
}
